:root {
    font-family: Roboto, Akkurat, DIN, Helvetica, Arial, sans-serif;
    font-size: 16px;
    line-height: 1.45;
    text-size-adjust: 100%;
    box-sizing: border-box;
    * {
        box-sizing: inherit;
    }

    --nav-padding: 0rem;
    --body-padding: 1.5rem;
    --content-padding: 1rem;

    @media (max-width: 50rem) {
        --body-padding: 0.75rem;
        --content-padding: 0.75rem;
        font-size: 17px;
    }
    @media (max-width: 30em) {
        --nav-padding: 0.25rem;
        --body-padding: 0.5rem;
        --content-padding: 0.75rem;
        font-size: 18px;
    }
    @media (max-width: 23em) {
        --nav-padding: 0.5rem;
        --body-padding: 0rem;
        font-size: 17px;
        line-height: 1.3;
    }
}

body {
    background-color: #f3f3f3;
    max-width: 60em;
    margin: 0 auto;
}

#___gatsby > div {
    padding: 0;
    padding: var(--body-padding);

    // Prevent Chrome for Android from boosting font sizes
    // See https://stackoverflow.com/a/15137584/4485551
    max-height: 10000em;
}

.site-content {
    margin: 1em 0;
}

@media print {
    #___gatsby > div {
        display: block;
    }
}

/* Sticky footer (see https://philipwalton.github.io/solved-by-flexbox/demos/sticky-footer/)
	Make sure the footer never lifts past the bottom of the page.
*/
:root,
body,
#___gatsby,
#___gatsby > div {
    min-height: 100vh;
}
#___gatsby > div {
    display: flex;
    flex-direction: column;
}
.site-header,
.site-footer {
    flex: none;
}
.site-content {
    flex: 1 0 auto;
    width: 100%;
}
/* / */

// Code blocks
@import 'prism-theme.scss';

//prettier-ignore
p, h1, h2, h3, h4, ul, ol, hr {
    margin: 0;
}

hr {
    border: none;
    border-top: 2px solid #ccd3db;
    margin: 1em 0;
}

ul,
ol {
    padding: 0;
    list-style: none;
}

::selection {
    background-color: hsl(210, 78%, 42%);
    color: white;
}

.typography {
    p {
        font-size: 1em;
    }
    //prettier-ignore
    h1, h2, h3, h4 {
        line-height: 1.25;
    }
    //prettier-ignore
    div, p, ul, ol, h1, h2, h3, h4, hr, details {
        // margin: 0;
        & + *, div + & {
            margin-top: 0.6em;
        }
    }

    hr {
        border: none;
        border-top: 2px solid #ccd3db;
        margin-top: 0.6em;
    }

    p + h1,
    p + h2,
    p + h3,
    p + h4 {
        margin-top: 1em;
    }
    ul {
        list-style-type: disc;
        ul {
            list-style-type: square;
        }
    }
    ol ol {
        list-style-type: lower-latin;
    }
    ul,
    ol {
        padding-left: 2.25em;
        ul,
        ol {
            padding-left: 1.2em;
        }
    }
    details > summary {
        cursor: pointer;
        border-radius: 0.2em;
        margin-left: -0.4em;
        padding: 0.1em 0.4em;
        background: hsl(204, 17%, 95%);
        &:hover {
            background: hsl(204, 17%, 88%);
        }
        &:focus {
            outline: 2px solid hsl(39, 100%, 64%);
        }
    }
}

.form {
    & > div {
        margin: 1em 0;
    }
    input {
        width: 20em;
        max-width: 100%;
    }
    textarea {
        min-height: 12em;
        width: 28em;
        max-width: 100%;
    }
    input,
    textarea {
        padding: 0.25em 0.4em;
        &:focus {
            outline: 3px solid hsl(39, 100%, 64%);
        }
    }
    label {
        display: block;
    }

    button {
        border: 2px solid hsl(210, 78%, 42%);
        background: rgba(hsl(210, 78%, 42%), 0.5);
        color: black;
    }
    input,
    textarea,
    button {
        &:focus {
            outline: 3px solid hsl(39, 100%, 64%);
        }
    }
}

a {
    color: hsl(210, 78%, 42%);
}
a:visited {
    color: #5d39a0;
}
a:focus {
    background: hsl(39, 100%, 64%);
    outline: 2px solid hsl(39, 100%, 64%);
    text-decoration: underline;
}
a:active {
    color: hsl(210, 78%, 42%);
}

.underline-on-hover {
    text-decoration: none;
    &:hover {
        text-decoration: underline;
    }
}

/*
  This will hide the focus indicator if the element receives focus via the mouse,
  but it will still show up on keyboard focus. This is using the focus-visible polyfill.
*/
.js-focus-visible {
    :focus:not([data-focus-visible-added]) {
        outline: initial;
    }
    a:focus:not([data-focus-visible-added]) {
        background: initial;
    }
}

// Reset sanitize.css's weird design choices regarding cursors
html,
[aria-busy='true'],
[aria-controls],
[aria-disabled],
[disabled] {
    cursor: auto;
}

.gatsby-resp-image-link {
    // display: inline !important;
}
.gatsby-resp-image-wrapper {
    margin: 0 !important;
}
